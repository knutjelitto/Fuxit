#ifndef OUTPUT_H_GENERATED_
#define OUTPUT_H_GENERATED_
/* Automically generated by wasm2c */
#ifdef __cplusplus
extern "C" {
#endif

#include <stdint.h>

#include "wasm-rt.h"

#ifndef WASM_RT_MODULE_PREFIX
#define WASM_RT_MODULE_PREFIX
#endif

#define WASM_RT_PASTE_(x, y) x ## y
#define WASM_RT_PASTE(x, y) WASM_RT_PASTE_(x, y)
#define WASM_RT_ADD_PREFIX(x) WASM_RT_PASTE(WASM_RT_MODULE_PREFIX, x)

/* TODO(binji): only use stdint.h types in header */
typedef uint8_t u8;
typedef int8_t s8;
typedef uint16_t u16;
typedef int16_t s16;
typedef uint32_t u32;
typedef int32_t s32;
typedef uint64_t u64;
typedef int64_t s64;
typedef float f32;
typedef double f64;

extern void WASM_RT_ADD_PREFIX(init)(void);

/* import: 'env' 'sweepJsRefs' */
extern void (*Z_envZ_sweepJsRefsZ_vi)(u32);
/* import: 'env' 'abort' */
extern void (*Z_envZ_abortZ_vv)(void);
/* import: 'env' 'pow' */
extern u32 (*Z_envZ_powZ_idd)(f64, f64);
/* import: 'env' 'round' */
extern u32 (*Z_envZ_roundZ_id)(f64);
/* import: 'env' 'floor' */
extern u32 (*Z_envZ_floorZ_id)(f64);
/* import: 'env' 'ceil' */
extern u32 (*Z_envZ_ceilZ_id)(f64);
/* import: 'env' 'log' */
extern u32 (*Z_envZ_logZ_id)(f64);
/* import: 'env' 'applyJsRef' */
extern u32 (*Z_envZ_applyJsRefZ_iiii)(u32, u32, u32);
/* import: 'env' 'jsStepper' */
extern void (*Z_envZ_jsStepperZ_vi)(u32);
/* import: 'env' 'exit' */
extern void (*Z_envZ_exitZ_vi)(u32);
/* import: 'env' 'write' */
extern u32 (*Z_envZ_writeZ_iiii)(u32, u32, u32);
/* import: 'env' 'Wrapper_setupIncomingPort' */
extern u32 (*Z_envZ_Wrapper_setupIncomingPortZ_ii)(u32);
/* import: 'env' 'Wrapper_setupOutgoingPort' */
extern u32 (*Z_envZ_Wrapper_setupOutgoingPortZ_iv)(void);
/* import: 'env' 'Json_runHelp' */
extern u32 (*Z_envZ_Json_runHelpZ_iii)(u32, u32);
/* import: 'env' 'Wrapper_sleep' */
extern u32 (*Z_envZ_Wrapper_sleepZ_id)(f64);
/* import: 'env' 'parseFloat' */
extern f64 (*Z_envZ_parseFloatZ_dii)(u32, u32);
/* import: 'env' 'isnan' */
extern u32 (*Z_envZ_isnanZ_id)(f64);
/* import: 'env' 'jsRefToWasmRecord' */
extern u32 (*Z_envZ_jsRefToWasmRecordZ_ii)(u32);
/* import: 'env' 'Debug_evaluator_name' */
extern u32 (*Z_envZ_Debug_evaluator_nameZ_ii)(u32);
/* import: 'env' 'putchar' */
extern u32 (*Z_envZ_putcharZ_ii)(u32);
/* import: 'env' 'eval_Test_runThunk' */
extern u32 (*Z_envZ_eval_Test_runThunkZ_ii)(u32);
/* import: 'env' 'eval_Json_succeed' */
extern u32 (*Z_envZ_eval_Json_succeedZ_ii)(u32);
/* import: 'env' 'eval_Json_fail' */
extern u32 (*Z_envZ_eval_Json_failZ_ii)(u32);
/* import: 'env' 'eval_Json_decodeList' */
extern u32 (*Z_envZ_eval_Json_decodeListZ_ii)(u32);
/* import: 'env' 'eval_Json_decodeArray' */
extern u32 (*Z_envZ_eval_Json_decodeArrayZ_ii)(u32);
/* import: 'env' 'eval_Json_decodeNull' */
extern u32 (*Z_envZ_eval_Json_decodeNullZ_ii)(u32);
/* import: 'env' 'eval_Json_decodeField' */
extern u32 (*Z_envZ_eval_Json_decodeFieldZ_ii)(u32);
/* import: 'env' 'eval_Json_decodeIndex' */
extern u32 (*Z_envZ_eval_Json_decodeIndexZ_ii)(u32);
/* import: 'env' 'eval_Json_decodeKeyValuePairs' */
extern u32 (*Z_envZ_eval_Json_decodeKeyValuePairsZ_ii)(u32);
/* import: 'env' 'eval_Json_andThen' */
extern u32 (*Z_envZ_eval_Json_andThenZ_ii)(u32);
/* import: 'env' 'eval_Json_oneOf' */
extern u32 (*Z_envZ_eval_Json_oneOfZ_ii)(u32);
/* import: 'env' 'eval_Json_mapMany' */
extern u32 (*Z_envZ_eval_Json_mapManyZ_ii)(u32);
/* import: 'env' 'eval_Json_array_get' */
extern u32 (*Z_envZ_eval_Json_array_getZ_ii)(u32);
/* import: 'env' 'eval_runOnString' */
extern u32 (*Z_envZ_eval_runOnStringZ_ii)(u32);
/* import: 'env' 'eval_Json_run' */
extern u32 (*Z_envZ_eval_Json_runZ_ii)(u32);
/* import: 'env' 'eval_Json_wrap' */
extern u32 (*Z_envZ_eval_Json_wrapZ_ii)(u32);
/* import: 'env' 'eval_Json_unwrap' */
extern u32 (*Z_envZ_eval_Json_unwrapZ_ii)(u32);
/* import: 'env' 'eval_Json_emptyArray' */
extern u32 (*Z_envZ_eval_Json_emptyArrayZ_ii)(u32);
/* import: 'env' 'eval_Json_emptyObject' */
extern u32 (*Z_envZ_eval_Json_emptyObjectZ_ii)(u32);
/* import: 'env' 'eval_Json_addField' */
extern u32 (*Z_envZ_eval_Json_addFieldZ_ii)(u32);
/* import: 'env' 'eval_Json_addEntry' */
extern u32 (*Z_envZ_eval_Json_addEntryZ_ii)(u32);
/* import: 'env' 'eval_Json_encode' */
extern u32 (*Z_envZ_eval_Json_encodeZ_ii)(u32);
/* import: 'env' 'eval_wrapInit' */
extern u32 (*Z_envZ_eval_wrapInitZ_ii)(u32);
/* import: 'env' 'eval_wrapView' */
extern u32 (*Z_envZ_eval_wrapViewZ_ii)(u32);
/* import: 'env' 'eval_intercept' */
extern u32 (*Z_envZ_eval_interceptZ_ii)(u32);
/* import: 'env' 'brk' */
extern u32 (*Z_envZ_brkZ_ii)(u32);
/* import: 'env' 'perror' */
extern void (*Z_envZ_perrorZ_vi)(u32);
/* import: 'env' 'sbrk' */
extern u32 (*Z_envZ_sbrkZ_ii)(u32);
/* import: 'env' 'markJsRef' */
extern void (*Z_envZ_markJsRefZ_vi)(u32);
/* import: 'env' 'setTempRet0' */
extern void (*Z_envZ_setTempRet0Z_vi)(u32);

/* export: 'memory' */
extern wasm_rt_memory_t (*WASM_RT_ADD_PREFIX(Z_memory));
/* export: '__wasm_call_ctors' */
extern void (*WASM_RT_ADD_PREFIX(Z___wasm_call_ctorsZ_vv))(void);
/* export: 'square' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_squareZ_ii))(u32);
/* export: 'sum' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_sumZ_ii))(u32);
/* export: 'stbsp_set_separators' */
extern void (*WASM_RT_ADD_PREFIX(Z_stbsp_set_separatorsZ_vii))(u32, u32);
/* export: 'stbsp_vsprintfcb' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_stbsp_vsprintfcbZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'stbsp_sprintf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_stbsp_sprintfZ_iiii))(u32, u32, u32);
/* export: 'stbsp_vsnprintf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_stbsp_vsnprintfZ_iiiii))(u32, u32, u32, u32);
/* export: 'stbsp_snprintf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_stbsp_snprintfZ_iiiii))(u32, u32, u32, u32);
/* export: 'stbsp_vsprintf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_stbsp_vsprintfZ_iiii))(u32, u32, u32);
/* export: 'eval_negate' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_negateZ_ii))(u32);
/* export: 'GC_allocate' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GC_allocateZ_iii))(u32, u32);
/* export: 'gc_state' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_gc_stateZ_i));
/* export: 'bitmap_find_space' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_bitmap_find_spaceZ_iiiii))(u32, u32, u32, u32);
/* export: 'mark' */
extern void (*WASM_RT_ADD_PREFIX(Z_markZ_vii))(u32, u32);
/* export: 'grow_heap' */
extern void (*WASM_RT_ADD_PREFIX(Z_grow_heapZ_vii))(u32, u32);
/* export: 'stack_flags' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_stack_flagsZ_i));
/* export: 'stack_values' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_stack_valuesZ_i));
/* export: 'safe_printf' */
extern void (*WASM_RT_ADD_PREFIX(Z_safe_printfZ_vii))(u32, u32);
/* export: 'eval_add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_addZ_ii))(u32);
/* export: 'eval_sub' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_subZ_ii))(u32);
/* export: 'eval_mul' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_mulZ_ii))(u32);
/* export: 'eval_fdiv' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_fdivZ_ii))(u32);
/* export: 'eval_idiv' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_idivZ_ii))(u32);
/* export: 'newElmInt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newElmIntZ_ii))(u32);
/* export: 'eval_toFloat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_toFloatZ_ii))(u32);
/* export: 'newElmFloat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newElmFloatZ_id))(f64);
/* export: 'eval_round' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_roundZ_ii))(u32);
/* export: 'eval_floor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_floorZ_ii))(u32);
/* export: 'eval_ceiling' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_ceilingZ_ii))(u32);
/* export: 'eval_not' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_notZ_ii))(u32);
/* export: 'True' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_TrueZ_i));
/* export: 'False' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_FalseZ_i));
/* export: 'eval_and' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_andZ_ii))(u32);
/* export: 'eval_or' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_orZ_ii))(u32);
/* export: 'eval_xor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_xorZ_ii))(u32);
/* export: 'eval_remainderBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_remainderByZ_ii))(u32);
/* export: 'eval_modBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_modByZ_ii))(u32);
/* export: 'Debug_assert' */
extern void (*WASM_RT_ADD_PREFIX(Z_Debug_assertZ_viiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'eval_log' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_logZ_ii))(u32);
/* export: 'eval_identity' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_identityZ_ii))(u32);
/* export: 'eval_Bitwise_and' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Bitwise_andZ_ii))(u32);
/* export: 'eval_Bitwise_or' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Bitwise_orZ_ii))(u32);
/* export: 'eval_Bitwise_xor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Bitwise_xorZ_ii))(u32);
/* export: 'eval_Bitwise_complement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Bitwise_complementZ_ii))(u32);
/* export: 'eval_Bitwise_shiftLeftBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Bitwise_shiftLeftByZ_ii))(u32);
/* export: 'eval_Bitwise_shiftRightBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Bitwise_shiftRightByZ_ii))(u32);
/* export: 'eval_Bitwise_shiftRightZfBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Bitwise_shiftRightZ5AfByZ_ii))(u32);
/* export: 'eval_toCode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_toCodeZ_ii))(u32);
/* export: 'newDynamicArray' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newDynamicArrayZ_ii))(u32);
/* export: 'DynamicArray_push' */
extern void (*WASM_RT_ADD_PREFIX(Z_DynamicArray_pushZ_vii))(u32, u32);
/* export: 'custom_params' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_custom_paramsZ_ii))(u32);
/* export: 'DynamicArray_remove_ordered' */
extern void (*WASM_RT_ADD_PREFIX(Z_DynamicArray_remove_orderedZ_vii))(u32, u32);
/* export: 'DynamicArray_remove_unordered' */
extern void (*WASM_RT_ADD_PREFIX(Z_DynamicArray_remove_unorderedZ_vii))(u32, u32);
/* export: 'eval_JsArray_singleton' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_singletonZ_ii))(u32);
/* export: 'newCustom' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newCustomZ_iiii))(u32, u32, u32);
/* export: 'eval_JsArray_length' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_lengthZ_ii))(u32);
/* export: 'eval_JsArray_initialize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_initializeZ_ii))(u32);
/* export: 'Utils_apply' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_applyZ_iiii))(u32, u32, u32);
/* export: 'GC_stack_pop_frame' */
extern void (*WASM_RT_ADD_PREFIX(Z_GC_stack_pop_frameZ_viii))(u32, u32, u32);
/* export: 'eval_JsArray_initializeFromList' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_initializeFromListZ_ii))(u32);
/* export: 'pNil' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_pNilZ_i));
/* export: 'newTuple2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newTuple2Z_iii))(u32, u32);
/* export: 'eval_JsArray_unsafeGet' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_unsafeGetZ_ii))(u32);
/* export: 'eval_JsArray_unsafeSet' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_unsafeSetZ_ii))(u32);
/* export: 'Utils_clone' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_cloneZ_ii))(u32);
/* export: 'eval_JsArray_push' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_pushZ_ii))(u32);
/* export: 'GC_memcpy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GC_memcpyZ_iiii))(u32, u32, u32);
/* export: 'eval_JsArray_foldl' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_foldlZ_ii))(u32);
/* export: 'eval_JsArray_foldr' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_foldrZ_ii))(u32);
/* export: 'eval_JsArray_map' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_mapZ_ii))(u32);
/* export: 'eval_JsArray_indexedMap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_indexedMapZ_ii))(u32);
/* export: 'eval_JsArray_slice' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_sliceZ_ii))(u32);
/* export: 'eval_JsArray_appendN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_JsArray_appendNZ_ii))(u32);
/* export: 'List_create' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_List_createZ_iii))(u32, u32);
/* export: 'Nil' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_NilZ_i));
/* export: 'eval_List_cons' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_List_consZ_ii))(u32);
/* export: 'newCons' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newConsZ_iii))(u32, u32);
/* export: 'eval_List_append' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_List_appendZ_ii))(u32);
/* export: 'eval_List_map2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_List_map2Z_ii))(u32);
/* export: 'eval_List_sortBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_List_sortByZ_ii))(u32);
/* export: 'Platform_initOnIntercept' */
extern void (*WASM_RT_ADD_PREFIX(Z_Platform_initOnInterceptZ_vii))(u32, u32);
/* export: 'Platform_subscriptions' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_subscriptionsZ_i));
/* export: 'Platform_update' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_updateZ_i));
/* export: 'Platform_model' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_modelZ_i));
/* export: 'GC_register_root' */
extern void (*WASM_RT_ADD_PREFIX(Z_GC_register_rootZ_vi))(u32);
/* export: 'eval_sendToApp_revArgs' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_sendToApp_revArgsZ_ii))(u32);
/* export: 'Platform_managerProcs' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_managerProcsZ_i));
/* export: 'Platform_enqueueEffects' */
extern void (*WASM_RT_ADD_PREFIX(Z_Platform_enqueueEffectsZ_viii))(u32, u32, u32);
/* export: 'Platform_effectsQueue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_effectsQueueZ_i));
/* export: 'Platform_effectsActive' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_effectsActiveZ_i));
/* export: 'Platform_dispatchEffects' */
extern void (*WASM_RT_ADD_PREFIX(Z_Platform_dispatchEffectsZ_viii))(u32, u32, u32);
/* export: 'Platform_initializeEffects' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_initializeEffectsZ_iv))(void);
/* export: 'Platform_process_cache' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_process_cacheZ_i));
/* export: 'Platform_setupEffects' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_setupEffectsZ_iii))(u32, u32);
/* export: 'Platform_initCmd' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_initCmdZ_i));
/* export: 'newClosure' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newClosureZ_iiiii))(u32, u32, u32, u32);
/* export: 'Platform_managerConfigs' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_managerConfigsZ_i));
/* export: 'eval_Platform_incomingPortOnEffects' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Platform_incomingPortOnEffectsZ_ii))(u32);
/* export: 'Process_sleep' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Process_sleepZ_i));
/* export: 'eval_Platform_outgoingPortOnEffects' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Platform_outgoingPortOnEffectsZ_ii))(u32);
/* export: 'eval_manager_loop' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_manager_loopZ_ii))(u32);
/* export: 'eval_Scheduler_rawSpawn' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_rawSpawnZ_ii))(u32);
/* export: 'Platform_setupIncomingPort' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_setupIncomingPortZ_iii))(u32, u32);
/* export: 'Platform_setupOutgoingPort' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_setupOutgoingPortZ_iii))(u32, u32);
/* export: 'Platform_instantiateManager' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_instantiateManagerZ_iii))(u32, u32);
/* export: 'Platform_createManager' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_createManagerZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'eval_manager_loop_receive' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_manager_loop_receiveZ_ii))(u32);
/* export: 'eval_Scheduler_receive' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_receiveZ_ii))(u32);
/* export: 'eval_Scheduler_andThen' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_andThenZ_ii))(u32);
/* export: 'Scheduler_guid' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_guidZ_i));
/* export: 'eval_Platform_sendToApp_lambda' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Platform_sendToApp_lambdaZ_ii))(u32);
/* export: 'pUnit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_pUnitZ_i));
/* export: 'eval_Scheduler_succeed' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_succeedZ_ii))(u32);
/* export: 'eval_Platform_sendToApp' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Platform_sendToAppZ_ii))(u32);
/* export: 'eval_Scheduler_binding' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_bindingZ_ii))(u32);
/* export: 'eval_Platform_sendToSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Platform_sendToSelfZ_ii))(u32);
/* export: 'eval_Scheduler_send_lambda' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_send_lambdaZ_ii))(u32);
/* export: 'eval_Scheduler_send' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_sendZ_ii))(u32);
/* export: 'eval_Platform_leaf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Platform_leafZ_ii))(u32);
/* export: 'eval_Platform_batch' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Platform_batchZ_ii))(u32);
/* export: 'eval_Platform_map' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Platform_mapZ_ii))(u32);
/* export: 'Queue_push' */
extern void (*WASM_RT_ADD_PREFIX(Z_Queue_pushZ_vii))(u32, u32);
/* export: 'newTuple3' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newTuple3Z_iiii))(u32, u32, u32);
/* export: 'Queue_shift' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Queue_shiftZ_ii))(u32);
/* export: 'Platform_gatherEffects' */
extern void (*WASM_RT_ADD_PREFIX(Z_Platform_gatherEffectsZ_viiii))(u32, u32, u32, u32);
/* export: 'eval_applyTaggers' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_applyTaggersZ_ii))(u32);
/* export: 'log_error' */
extern void (*WASM_RT_ADD_PREFIX(Z_log_errorZ_vii))(u32, u32);
/* export: 'eval_Scheduler_rawSend' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_rawSendZ_ii))(u32);
/* export: 'Platform_toEffect' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_toEffectZ_iiiii))(u32, u32, u32, u32);
/* export: 'Platform_insert' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_insertZ_iiii))(u32, u32, u32);
/* export: 'safe_vprintf' */
extern void (*WASM_RT_ADD_PREFIX(Z_safe_vprintfZ_vii))(u32, u32);
/* export: 'Platform_checkPortName' */
extern void (*WASM_RT_ADD_PREFIX(Z_Platform_checkPortNameZ_vi))(u32);
/* export: 'Utils_equal' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_equalZ_i));
/* export: 'eval_Platform_outgoingPortMap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Platform_outgoingPortMapZ_ii))(u32);
/* export: 'Platform_outgoingPort' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_outgoingPortZ_iiii))(u32, u32, u32);
/* export: 'Platform_outgoingPortMap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_outgoingPortMapZ_i));
/* export: 'eval_Platform_incomingPortMap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Platform_incomingPortMapZ_ii))(u32);
/* export: 'Platform_sendToIncomingPort' */
extern void (*WASM_RT_ADD_PREFIX(Z_Platform_sendToIncomingPortZ_vii))(u32, u32);
/* export: 'Platform_incomingPort' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_incomingPortZ_iiii))(u32, u32, u32);
/* export: 'Platform_incomingPortMap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_incomingPortMapZ_i));
/* export: 'newJsRef' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newJsRefZ_ii))(u32);
/* export: 'eval_Process_sleep' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Process_sleepZ_ii))(u32);
/* export: 'newTask' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newTaskZ_iiiiii))(u32, u32, u32, u32, u32);
/* export: 'eval_Scheduler_fail' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_failZ_ii))(u32);
/* export: 'eval_Scheduler_onError' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_onErrorZ_ii))(u32);
/* export: 'Scheduler_queue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_queueZ_i));
/* export: 'Scheduler_working' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_workingZ_i));
/* export: 'eval_Scheduler_step_lambda' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_step_lambdaZ_ii))(u32);
/* export: 'eval_Scheduler_spawn_lambda' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_spawn_lambdaZ_ii))(u32);
/* export: 'eval_Scheduler_spawn' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_spawnZ_ii))(u32);
/* export: 'eval_Scheduler_kill_lambda' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_kill_lambdaZ_ii))(u32);
/* export: 'eval_Scheduler_kill' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Scheduler_killZ_ii))(u32);
/* export: 'code_units' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_code_unitsZ_ii))(u32);
/* export: 'String_copy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_copyZ_iii))(u32, u32);
/* export: 'find_reverse' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_find_reverseZ_iiiii))(u32, u32, u32, u32);
/* export: 'find_forward' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_find_forwardZ_iiiii))(u32, u32, u32, u32);
/* export: 'eval_String_uncons' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_unconsZ_ii))(u32);
/* export: 'newElmChar' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newElmCharZ_ii))(u32);
/* export: 'newElmString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newElmStringZ_ii))(u32);
/* export: 'eval_String_append' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_appendZ_ii))(u32);
/* export: 'eval_String_length' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_lengthZ_ii))(u32);
/* export: 'eval_String_foldr' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_foldrZ_ii))(u32);
/* export: 'eval_String_split' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_splitZ_ii))(u32);
/* export: 'eval_String_join' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_joinZ_ii))(u32);
/* export: 'Debug_assert_equal' */
extern void (*WASM_RT_ADD_PREFIX(Z_Debug_assert_equalZ_viiiiiiiii))(u32, u32, u32, u32, u32, u32, u32, u32, u32);
/* export: 'eval_String_slice' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_sliceZ_ii))(u32);
/* export: 'is_whitespace' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_is_whitespaceZ_ii))(u32);
/* export: 'eval_String_trim' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_trimZ_ii))(u32);
/* export: 'eval_String_trimLeft' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_trimLeftZ_ii))(u32);
/* export: 'eval_String_trimRight' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_trimRightZ_ii))(u32);
/* export: 'eval_String_all' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_allZ_ii))(u32);
/* export: 'eval_String_contains' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_containsZ_ii))(u32);
/* export: 'eval_String_startsWith' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_startsWithZ_ii))(u32);
/* export: 'eval_String_endsWith' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_endsWithZ_ii))(u32);
/* export: 'eval_String_indexes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_indexesZ_ii))(u32);
/* export: 'String_fromNumber_eval' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_fromNumber_evalZ_ii))(u32);
/* export: 'eval_String_toInt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_toIntZ_ii))(u32);
/* export: 'eval_String_toFloat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_String_toFloatZ_ii))(u32);
/* export: 'Debug_is_target_in_range' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Debug_is_target_in_rangeZ_iii))(u32, u32);
/* export: 'Debug_pretty' */
extern void (*WASM_RT_ADD_PREFIX(Z_Debug_prettyZ_vii))(u32, u32);
/* export: 'newRecord' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_newRecordZ_iiii))(u32, u32, u32);
/* export: 'Utils_destruct_index' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_destruct_indexZ_iii))(u32, u32);
/* export: 'Utils_access_eval' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_access_evalZ_ii))(u32);
/* export: 'Utils_update' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_updateZ_iiiii))(u32, u32, u32, u32);
/* export: 'eval_Utils_append' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Utils_appendZ_ii))(u32);
/* export: 'GC_stack_push_frame' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GC_stack_push_frameZ_iii))(u32, u32);
/* export: 'Debug_assert_sanity' */
extern void (*WASM_RT_ADD_PREFIX(Z_Debug_assert_sanityZ_viiiii))(u32, u32, u32, u32, u32);
/* export: 'eq_eval' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eq_evalZ_ii))(u32);
/* export: 'eval_notEqual' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_notEqualZ_ii))(u32);
/* export: 'compare_eval' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_compare_evalZ_ii))(u32);
/* export: 'lt_eval' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_lt_evalZ_ii))(u32);
/* export: 'le_eval' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_le_evalZ_ii))(u32);
/* export: 'gt_eval' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_gt_evalZ_ii))(u32);
/* export: 'ge_eval' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_ge_evalZ_ii))(u32);
/* export: 'Debug_pause' */
extern void (*WASM_RT_ADD_PREFIX(Z_Debug_pauseZ_vv))(void);
/* export: 'log_debug' */
extern void (*WASM_RT_ADD_PREFIX(Z_log_debugZ_vii))(u32, u32);
/* export: 'print_heap_range' */
extern void (*WASM_RT_ADD_PREFIX(Z_print_heap_rangeZ_vii))(u32, u32);
/* export: 'sanity_check' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_sanity_checkZ_ii))(u32);
/* export: 'print_value' */
extern void (*WASM_RT_ADD_PREFIX(Z_print_valueZ_vi))(u32);
/* export: 'Debug_print_offset' */
extern void (*WASM_RT_ADD_PREFIX(Z_Debug_print_offsetZ_vii))(u32, u32);
/* export: 'Debug_is_target_addr' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Debug_is_target_addrZ_ii))(u32);
/* export: 'is_marked' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_is_markedZ_ii))(u32);
/* export: 'ptr_to_bitmap_iter' */
extern void (*WASM_RT_ADD_PREFIX(Z_ptr_to_bitmap_iterZ_viii))(u32, u32, u32);
/* export: 'pTrue' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_pTrueZ_i));
/* export: 'pFalse' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_pFalseZ_i));
/* export: 'print_value_line' */
extern void (*WASM_RT_ADD_PREFIX(Z_print_value_lineZ_vi))(u32);
/* export: 'print_value_full' */
extern void (*WASM_RT_ADD_PREFIX(Z_print_value_fullZ_vi))(u32);
/* export: 'print_heap' */
extern void (*WASM_RT_ADD_PREFIX(Z_print_heapZ_vv))(void);
/* export: 'print_bitmap' */
extern void (*WASM_RT_ADD_PREFIX(Z_print_bitmapZ_viii))(u32, u32, u32);
/* export: 'print_stack_map' */
extern void (*WASM_RT_ADD_PREFIX(Z_print_stack_mapZ_vv))(void);
/* export: 'print_state' */
extern void (*WASM_RT_ADD_PREFIX(Z_print_stateZ_vv))(void);
/* export: 'format_ptr_diff_size' */
extern void (*WASM_RT_ADD_PREFIX(Z_format_ptr_diff_sizeZ_viiii))(u32, u32, u32, u32);
/* export: 'format_mem_size' */
extern void (*WASM_RT_ADD_PREFIX(Z_format_mem_sizeZ_viii))(u32, u32, u32);
/* export: 'print_ptr_diff_size' */
extern void (*WASM_RT_ADD_PREFIX(Z_print_ptr_diff_sizeZ_vii))(u32, u32);
/* export: 'print_mem_size' */
extern void (*WASM_RT_ADD_PREFIX(Z_print_mem_sizeZ_vi))(u32);
/* export: 'pretty_print_child' */
extern void (*WASM_RT_ADD_PREFIX(Z_pretty_print_childZ_vii))(u32, u32);
/* export: 'Unit' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_UnitZ_i));
/* export: 'Debug_pretty_with_location' */
extern void (*WASM_RT_ADD_PREFIX(Z_Debug_pretty_with_locationZ_viiii))(u32, u32, u32, u32);
/* export: 'Debug_toStringHelp' */
extern void (*WASM_RT_ADD_PREFIX(Z_Debug_toStringHelpZ_viii))(u32, u32, u32);
/* export: 'StringBuilder_copyAscii' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringBuilder_copyAsciiZ_vii))(u32, u32);
/* export: 'StringBuilder_ensureSpace' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringBuilder_ensureSpaceZ_vii))(u32, u32);
/* export: 'StringBuilder_writeChar' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringBuilder_writeCharZ_vii))(u32, u32);
/* export: 'eval_Debug_toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Debug_toStringZ_ii))(u32);
/* export: 'StringBuilder_toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_StringBuilder_toStringZ_ii))(u32);
/* export: 'StringBuilder_init' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringBuilder_initZ_vi))(u32);
/* export: 'eval_Debug_log' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Debug_logZ_ii))(u32);
/* export: 'eval_Debug_todo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_eval_Debug_todoZ_ii))(u32);
/* export: 'Debug_evaluator_name_core' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Debug_evaluator_name_coreZ_ii))(u32);
/* export: 'GC_stack_push_value' */
extern void (*WASM_RT_ADD_PREFIX(Z_GC_stack_push_valueZ_vi))(u32);
/* export: 'bitmap_reset' */
extern void (*WASM_RT_ADD_PREFIX(Z_bitmap_resetZ_vi))(u32);
/* export: 'bitmap_dead_between' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_bitmap_dead_betweenZ_iiii))(u32, u32, u32);
/* export: 'make_bitmask' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_make_bitmaskZ_iii))(u32, u32);
/* export: 'bitmap_iter_to_ptr' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_bitmap_iter_to_ptrZ_iii))(u32, u32);
/* export: 'bitmap_find' */
extern void (*WASM_RT_ADD_PREFIX(Z_bitmap_findZ_viii))(u32, u32, u32);
/* export: 'calc_offsets' */
extern void (*WASM_RT_ADD_PREFIX(Z_calc_offsetsZ_viii))(u32, u32, u32);
/* export: 'forwarding_address' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_forwarding_addressZ_iii))(u32, u32);
/* export: 'compact' */
extern void (*WASM_RT_ADD_PREFIX(Z_compactZ_vii))(u32, u32);
/* export: 'child_count' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_child_countZ_ii))(u32);
/* export: 'resize_system_memory' */
extern void (*WASM_RT_ADD_PREFIX(Z_resize_system_memoryZ_vii))(u32, u32);
/* export: 'set_heap_layout' */
extern void (*WASM_RT_ADD_PREFIX(Z_set_heap_layoutZ_viii))(u32, u32, u32);
/* export: 'init_heap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_init_heapZ_ii))(u32);
/* export: 'move_metadata_after_resize' */
extern void (*WASM_RT_ADD_PREFIX(Z_move_metadata_after_resizeZ_vii))(u32, u32);
/* export: 'next_heap_size_bytes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_next_heap_size_bytesZ_iii))(u32, u32);
/* export: 'mark_words' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_mark_wordsZ_iiii))(u32, u32, u32);
/* export: 'stack_reset' */
extern void (*WASM_RT_ADD_PREFIX(Z_stack_resetZ_vv))(void);
/* export: 'GC_stack_pop_value' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GC_stack_pop_valueZ_iv))(void);
/* export: 'GC_stack_tailcall' */
extern void (*WASM_RT_ADD_PREFIX(Z_GC_stack_tailcallZ_vii))(u32, u32);
/* export: 'reset_state' */
extern void (*WASM_RT_ADD_PREFIX(Z_reset_stateZ_vi))(u32);
/* export: 'coreRoots' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_coreRootsZ_i));
/* export: 'GC_init' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GC_initZ_iv))(void);
/* export: 'GC_collect_minor' */
extern void (*WASM_RT_ADD_PREFIX(Z_GC_collect_minorZ_vv))(void);
/* export: 'GC_collect_major' */
extern void (*WASM_RT_ADD_PREFIX(Z_GC_collect_majorZ_vv))(void);
/* export: 'GC_execute' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_GC_executeZ_ii))(u32);
/* export: 'GC_init_root' */
extern void (*WASM_RT_ADD_PREFIX(Z_GC_init_rootZ_vii))(u32, u32);
/* export: 'StringBuilder_startSection' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringBuilder_startSectionZ_vii))(u32, u32);
/* export: 'StringBuilder_finishSection' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringBuilder_finishSectionZ_vi))(u32);
/* export: 'StringBuilder_writeIndent' */
extern void (*WASM_RT_ADD_PREFIX(Z_StringBuilder_writeIndentZ_vii))(u32, u32);
/* export: 'Basics_negate' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_negateZ_i));
/* export: 'Basics_add' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_addZ_i));
/* export: 'Basics_sub' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_subZ_i));
/* export: 'Basics_mul' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_mulZ_i));
/* export: 'Basics_fdiv' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_fdivZ_i));
/* export: 'Basics_idiv' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_idivZ_i));
/* export: 'Basics_pow' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_powZ_i));
/* export: 'Basics_toFloat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_toFloatZ_i));
/* export: 'Basics_round' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_roundZ_i));
/* export: 'Basics_floor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_floorZ_i));
/* export: 'Basics_ceiling' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_ceilingZ_i));
/* export: 'Basics_not' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_notZ_i));
/* export: 'Basics_and' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_andZ_i));
/* export: 'Basics_or' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_orZ_i));
/* export: 'Basics_xor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_xorZ_i));
/* export: 'Basics_remainderBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_remainderByZ_i));
/* export: 'Basics_modBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_modByZ_i));
/* export: 'Basics_log' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_logZ_i));
/* export: 'Basics_identity' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Basics_identityZ_i));
/* export: 'Bitwise_and' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Bitwise_andZ_i));
/* export: 'Bitwise_or' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Bitwise_orZ_i));
/* export: 'Bitwise_xor' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Bitwise_xorZ_i));
/* export: 'Bitwise_complement' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Bitwise_complementZ_i));
/* export: 'Bitwise_shiftLeftBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Bitwise_shiftLeftByZ_i));
/* export: 'Bitwise_shiftRightBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Bitwise_shiftRightByZ_i));
/* export: 'Bitwise_shiftRightZfBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Bitwise_shiftRightZ5AfByZ_i));
/* export: 'Char_toCode' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Char_toCodeZ_i));
/* export: 'JsArray_empty' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_emptyZ_i));
/* export: 'JsArray_singleton' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_singletonZ_i));
/* export: 'JsArray_length' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_lengthZ_i));
/* export: 'JsArray_initialize' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_initializeZ_i));
/* export: 'JsArray_initializeFromList' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_initializeFromListZ_i));
/* export: 'JsArray_unsafeGet' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_unsafeGetZ_i));
/* export: 'JsArray_unsafeSet' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_unsafeSetZ_i));
/* export: 'JsArray_push' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_pushZ_i));
/* export: 'JsArray_foldl' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_foldlZ_i));
/* export: 'JsArray_foldr' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_foldrZ_i));
/* export: 'JsArray_map' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_mapZ_i));
/* export: 'JsArray_indexedMap' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_indexedMapZ_i));
/* export: 'JsArray_slice' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_sliceZ_i));
/* export: 'JsArray_appendN' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_JsArray_appendNZ_i));
/* export: 'List_cons' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_List_consZ_i));
/* export: 'List_append' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_List_appendZ_i));
/* export: 'List_map2' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_List_map2Z_i));
/* export: 'List_sortBy' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_List_sortByZ_i));
/* export: 'Platform_sendToApp' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_sendToAppZ_i));
/* export: 'Platform_sendToSelf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_sendToSelfZ_i));
/* export: 'Platform_leaf' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_leafZ_i));
/* export: 'Platform_batch' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_batchZ_i));
/* export: 'Platform_map' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Platform_mapZ_i));
/* export: 'Scheduler_succeed' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_succeedZ_i));
/* export: 'Scheduler_fail' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_failZ_i));
/* export: 'Scheduler_binding' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_bindingZ_i));
/* export: 'Scheduler_andThen' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_andThenZ_i));
/* export: 'Scheduler_onError' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_onErrorZ_i));
/* export: 'Scheduler_receive' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_receiveZ_i));
/* export: 'Scheduler_rawSpawn' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_rawSpawnZ_i));
/* export: 'Scheduler_spawn' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_spawnZ_i));
/* export: 'Scheduler_rawSend' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_rawSendZ_i));
/* export: 'Scheduler_send' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_sendZ_i));
/* export: 'Scheduler_kill' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Scheduler_killZ_i));
/* export: 'tag_names' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_tag_namesZ_i));
/* export: 'String_uncons' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_unconsZ_i));
/* export: 'String_append' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_appendZ_i));
/* export: 'String_length' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_lengthZ_i));
/* export: 'String_foldr' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_foldrZ_i));
/* export: 'String_split' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_splitZ_i));
/* export: 'String_join' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_joinZ_i));
/* export: 'String_slice' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_sliceZ_i));
/* export: 'String_trim' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_trimZ_i));
/* export: 'String_trimLeft' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_trimLeftZ_i));
/* export: 'String_trimRight' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_trimRightZ_i));
/* export: 'String_all' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_allZ_i));
/* export: 'String_contains' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_containsZ_i));
/* export: 'String_startsWith' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_startsWithZ_i));
/* export: 'String_endsWith' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_endsWithZ_i));
/* export: 'String_indexes' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_indexesZ_i));
/* export: 'String_fromNumber' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_fromNumberZ_i));
/* export: 'String_toInt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_toIntZ_i));
/* export: 'String_toFloat' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_String_toFloatZ_i));
/* export: 'Utils_append' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_appendZ_i));
/* export: 'Utils_notEqual' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_notEqualZ_i));
/* export: 'Utils_compare' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_compareZ_i));
/* export: 'Utils_lt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_ltZ_i));
/* export: 'Utils_le' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_leZ_i));
/* export: 'Utils_gt' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_gtZ_i));
/* export: 'Utils_ge' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Utils_geZ_i));
/* export: 'Debug_toString' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Debug_toStringZ_i));
/* export: 'Debug_log' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Debug_logZ_i));
/* export: 'Debug_todo' */
extern u32 (*WASM_RT_ADD_PREFIX(Z_Debug_todoZ_i));
/* export: '__indirect_function_table' */
extern wasm_rt_table_t (*WASM_RT_ADD_PREFIX(Z___indirect_function_table));
/* export: '__dso_handle' */
extern u32 (*WASM_RT_ADD_PREFIX(Z___dso_handleZ_i));
/* export: '__data_end' */
extern u32 (*WASM_RT_ADD_PREFIX(Z___data_endZ_i));
/* export: '__global_base' */
extern u32 (*WASM_RT_ADD_PREFIX(Z___global_baseZ_i));
/* export: '__heap_base' */
extern u32 (*WASM_RT_ADD_PREFIX(Z___heap_baseZ_i));
/* export: '__memory_base' */
extern u32 (*WASM_RT_ADD_PREFIX(Z___memory_baseZ_i));
/* export: '__table_base' */
extern u32 (*WASM_RT_ADD_PREFIX(Z___table_baseZ_i));
#ifdef __cplusplus
}
#endif

#endif  /* OUTPUT_H_GENERATED_ */
